name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release-please:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    
    steps:
    - name: Run Release Please
      uses: googleapis/release-please-action@v4
      id: release
      with:
        release-type: elixir
        token: ${{ secrets.GITHUB_TOKEN }}

  build-artifacts:
    name: Build Release Artifacts
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.release-please.outputs.tag_name }}

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: '28.0'
        elixir-version: '1.18.4'

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-release-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-release-

    - name: Install dependencies
      run: mix deps.get --only prod

    - name: Build Elixir release
      env:
        MIX_ENV: prod
      run: |
        mix compile
        mix release

    - name: Package release artifacts
      run: |
        cd _build/prod/rel/todo
        tar -czf ../../../../todo-${{ needs.release-please.outputs.version }}-linux-amd64.tar.gz .
        cd ../../../..

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: todo-release
        path: todo-${{ needs.release-please.outputs.version }}-linux-amd64.tar.gz

  docker-image:
    name: Build Docker Image
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.release-please.outputs.tag_name }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ needs.release-please.outputs.version }}
          ghcr.io/${{ github.repository }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  upload-artifacts:
    name: Upload to GitHub Release
    needs: [release-please, build-artifacts]
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: todo-release

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.release-please.outputs.tag_name }}
        files: |
          todo-${{ needs.release-please.outputs.version }}-linux-amd64.tar.gz